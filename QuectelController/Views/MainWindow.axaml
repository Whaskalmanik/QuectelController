<Window xmlns ="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:QuectelController.ViewModels"
        xmlns:models="clr-namespace:QuectelController;assembly=QuectelController"     
        xmlns:lib="clr-namespace:QuectelController.Communication;assembly=QuectelController.Communication"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions.Custom"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="QuectelController.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        MinHeight="700" MinWidth="750"
        Title="Quectel Modem Controller"
        Name="MainWindow">

  <i:Interaction.Behaviors>
    <ia:EventTriggerBehavior EventName="Closing" SourceObject="{Binding #MainWindow}">
      <ia:InvokeCommandAction Command="{Binding ClosingCommand}"/>
    </ia:EventTriggerBehavior>
  </i:Interaction.Behaviors>
  
  <Design.DataContext>
      <vm:MainWindowViewModel/>
  </Design.DataContext>
  <DockPanel LastChildFill="True">
    <Grid DockPanel.Dock="Top" ColumnDefinitions="Auto,Auto,*,Auto" RowDefinitions="33,33,33,33,33,33" Margin="4">
      <Label Margin="0,1,5,0" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">Serial Port</Label>
      <ComboBox IsEnabled="{Binding !CanSend}" Width="100" Margin="0,1,5,0" Grid.Row="0" Grid.Column="1" SelectedItem="{Binding SerialPort}" Items="{Binding SerialPorts}"></ComboBox>
      <Label Margin="0,1,5,0" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">Baudrate</Label>
      <ComboBox IsEnabled="{Binding !CanSend}" Width="100" Margin="0,1,5,0" Grid.Row="1" Grid.Column="1" SelectedItem="{Binding Baudrate}" Items="{Binding Baudrates}"></ComboBox>
      <Label Margin="0,1,5,0" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center">Data bits</Label>
      <ComboBox IsEnabled="{Binding !CanSend}" Width="100" Margin="0,1,5,0" Grid.Row="2" Grid.Column="1" SelectedItem="{Binding DataBits}" Items="{Binding DataBitsList}" ></ComboBox>
      <Label Margin="0,1,5,0" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center">Stop bits</Label>
      <ComboBox IsEnabled="{Binding !CanSend}" Width="100" Margin="0,1,5,0" Grid.Row="3" Grid.Column="1" SelectedItem="{Binding StopBits}" Items="{Binding StopBitsList}"></ComboBox>
      <Label Margin="0,1,5,0" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center">Parity</Label>
      <ComboBox IsEnabled="{Binding !CanSend}" Width="100" Margin="0,1,5,0" Grid.Row="4" Grid.Column="1" SelectedItem="{Binding Parity}" Items="{Binding Parities}"></ComboBox>
      <Button IsEnabled="{Binding CanSend}" Command="{Binding DisconnectCommand}" Margin="0,1,0,0" HorizontalAlignment="Stretch" Grid.Row="5" Grid.Column="0"  Foreground="White" Background="Red" Content="Disconnect"/>
      <Button IsEnabled="{Binding !CanSend}" Command="{Binding ConnectCommand}" Margin="0,1,5,0"  HorizontalAlignment="Stretch" Grid.Row="5" Grid.Column="1" Foreground="White" Background="Green" Content="Connect"/>
      <TextBox Grid.Row="0" Grid.Column="2" Watermark="Search" Text="{Binding ToSearchValue.Value}"  ></TextBox>
      <Border Grid.Row="1" Grid.Column="2" Grid.RowSpan="5" BorderBrush="Black" BorderThickness="0.5">
        <ScrollViewer>
          <TreeView FontSize="12" Items="{Binding FilteredCategories}">
            <TreeView.DataTemplates>
              <TreeDataTemplate DataType="models:TreeViewCategory" ItemsSource="{Binding Items}">
                <TextBlock FontSize="12" Foreground="MediumSlateBlue" Text="{Binding Name}" />
              </TreeDataTemplate>
              <DataTemplate DataType="models:TreeViewItem">
                <TextBlock Name="SearchTB" Text="{Binding Command.Name}" ToolTip.Tip="{Binding Command.Description}" >
                  <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{Binding #SearchTB}">
                      <ia:InvokeCommandAction Command="{Binding $parent[Window].DataContext.SelectDefualtCommand}" CommandParameter="{Binding Command}"/>
                    </ia:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <TextBlock.ContextMenu>
                    <ContextMenu>
                      <MenuItem Header="Execute" IsVisible="{Binding Command.CanExecute}" Command="{Binding $parent[Window].DataContext.ExecuteCommand}" CommandParameter="{Binding Command}"/>
                      <MenuItem Header="Test" IsVisible="{Binding Command.CanTest}" Command="{Binding $parent[Window].DataContext.TestCommand}" CommandParameter="{Binding Command}"/>
                      <MenuItem Header="Read" IsVisible="{Binding Command.CanRead}" Command="{Binding $parent[Window].DataContext.ReadCommand}" CommandParameter="{Binding Command}"/>
                      <MenuItem Header="Write" IsVisible="{Binding Command.CanWrite}" Command="{Binding $parent[Window].DataContext.WriteCommand}" CommandParameter="{Binding Command}"/>
                    </ContextMenu>
                  </TextBlock.ContextMenu>
                </TextBlock>
              </DataTemplate>
            </TreeView.DataTemplates>
          </TreeView>
        </ScrollViewer>
      </Border>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="0" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" Content="Command History" Command="{Binding ShowHistoryCommand}"/>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="1" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" IsEnabled="{Binding CanSend}" Content="Execute History" Command="{Binding ExecuteHistoryCommand}"/>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="2" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" Content="Load History" Command="{Binding ImportHistoryCommand}"/>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="3" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" Content="Export History" Command="{Binding ExportHistoryCommand}"/>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="4" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" Content="Export Log" Command="{Binding ExportLogCommand}"/>
      <Button HorizontalAlignment="Stretch" Margin="5,0,0,0" Grid.Row="5" Grid.Column="3" Foreground="White" Background="MediumSlateBlue" IsEnabled="{Binding CanSend}" Content="Measurement" Command="{Binding OpenMeasurementCommand}"/>
    </Grid>
    <Border DockPanel.Dock="Bottom" BorderThickness="0.5" BorderBrush="Black">
      <Grid Margin="4.5,0,4,3"  RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="*,Auto">
        <ProgressBar Name="Progressbar" IsEnabled="{Binding isProgressBarVissible}" Value="{Binding ProgressValue}" Height="10"  Grid.Row="2" Grid.Column="0" />
        <Label Name="StatusBar" FontSize="10" Foreground="{Binding StatusBarColor}" Grid.Row="2" Grid.Column="2" Content="{Binding StatusBar}" HorizontalContentAlignment="Center"/>
      </Grid>
    </Border>
    <Grid Margin="4.5,0,4,1" ColumnDefinitions="*,Auto,Auto" RowDefinitions="Auto,Auto" DockPanel.Dock="Bottom">
      <Button  VerticalAlignment="Stretch" IsEnabled="{Binding CanSend}" Command="{Binding SendCommand}" Width="100" Grid.Row="0" Grid.Column="1"  Foreground="White" Background="MediumSlateBlue" Content="Send" HotKey="Enter"/>
      <TextBox Grid.Row="0" Grid.Column="0" Watermark="Command to be sent" Text="{Binding ToSendValue}"></TextBox>
    </Grid>
    <Border Margin="4.5,2,5,2" BorderBrush="Black" BorderThickness="0.5">
      <ScrollViewer Name="TerminalScroller">
        <i:Interaction.Behaviors>
          <ia:DataTriggerBehavior Binding="{Binding TerminalTextChangedCount}" ComparisonCondition="GreaterThan" Value="0">
            <ia:CallMethodAction MethodName="ScrollToEnd" TargetObject="{Binding #TerminalScoller}"/>
          </ia:DataTriggerBehavior>
        </i:Interaction.Behaviors>
        <TextBox IsReadOnly="True" Padding ="5" FontSize="12" FontFamily="cour.ttf" Foreground="Black" Text="{Binding TerminalString}"></TextBox>
      </ScrollViewer>
    </Border>
  </DockPanel>
</Window>
